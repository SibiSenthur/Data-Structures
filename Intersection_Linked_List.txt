## Q 160 Intersection of Linked List

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) 
{
    
    if (headA == NULL || headB == NULL) 
        return NULL;
    
    int len1 = 0;
    int len2 = 0;

    struct ListNode *ptr = headA;
    /* get length of list A & B */
    while (ptr) {
        len1++;
        ptr = ptr->next;
    } 
    ptr = headB;
    while (ptr) {
        len2++;
        ptr = ptr->next;
    } 
	/* now cut the list to equal length */
    if (len1 > len2) 
    {
        for (int i = len1; len1 > len2; len1--) 
        {
            headA = headA->next;
        }
    }
    else if (len2 > len1) 
    {
            for (int i = len2; len2 > len1; len2--) 
        {
            headB = headB->next;
        }
    }
    
    /* move synchronously */
    while (headA != headB) {
        headA = headA->next;
        headB = headB->next;
    }
    return headA;
}

